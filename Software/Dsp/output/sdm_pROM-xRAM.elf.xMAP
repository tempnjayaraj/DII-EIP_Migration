# Link map of Finit_MC56F835x_



# .interrupt_code
  00000000 000000A4 interrupt_vectors.text F_vect	(Vectors.c)

# .executing_code
  000000A4 00000047 startup.text Finit_MC56F835x_	(Init.asm)
  000000A4 00000047 startup.text startup.text	(Init.asm)
  000000EB 0000001F .text   FReadADC	(AnalogIn.c)
  0000010A 000000D0 .text   FGetAnalogInput	(AnalogIn.c)
  000001DA 00000567 .text   FControlBldc	(Bldc.c)
  00000741 0000001F .text   FTacA0_Interrupt	(Commutate.c)
  00000760 0000001F .text   FTacA1_Interrupt	(Commutate.c)
  0000077F 0000001F .text   FTacA2_Interrupt	(Commutate.c)
  0000079E 0000001F .text   FTacB0_Interrupt	(Commutate.c)
  000007BD 0000001F .text   FTacB1_Interrupt	(Commutate.c)
  000007DC 0000001F .text   FTacB2_Interrupt	(Commutate.c)
  000007FB 00000092 .text   FCommutate	(Commutate.c)
  0000088D 00000003 .text   FAsmReadProgramSpaceWord	(Controller.c)
  00000890 0000001B .text   FCopyFlashFuncTable	(Controller.c)
  000008AB 0000003E .text   Fmain	(Controller.c)
  000008E9 00000064 .text   FTestForShort	(Diagnostic.c)
  0000094D 00000078 .text   FReadPortData	(DigitalIn.c)
  000009C5 00000084 .text   FGetDigitalInput	(DigitalIn.c)
  00000A49 0000007F .text   FHallDebounceAndLatch	(HallBus.c)
  00000AC8 00000143 .text   FHallBus_Timer_Interrupt	(HallBus.c)
  00000C0B 0000003E .text   FGetPositionProfile	(Motion.c)
  00000C49 0000012B .text   FCalculateTargetPosition	(Motion.c)
  00000D74 00000102 .text   FGetActualVelocity	(Motion.c)
  00000E76 00000073 .text   FCalculateTargetVelocity	(Motion.c)
  00000EE9 00000023 .text   FPortA_Timer_Interrupt	(Timers.c)
  00000F0C 00000023 .text   FPortB_Timer_Interrupt	(Timers.c)
  00000F2F 00000228 .text   FDSP_Init	(Utility.c)
  00001157 00000056 .text   FOnChange	(Utility.c)
  000011AD 00000047 .text   FUpdateAnalog	(Utility.c)
  000011F4 000001AE .text   FLoadXfrMotorTable	(Utility.c)
  000013A2 000000EE .text   FConfigureMotorPorts	(Utility.c)
  00001490 00000007 .text   FUnexpectedInterrupt	(Vectors.c)
  00001497 00000007 .text   FCOPReset	(Vectors.c)
  0000149E 00000007 .text   FIllegalInstruction	(Vectors.c)
  000014A5 00000007 .text   FStackOverflow	(Vectors.c)
  000014AC 00000007 .text   FMisalignedAccess	(Vectors.c)
  000014B3 00000013 .text   FSetSciConfig	(SCI.c)
  000014C6 00000025 .text   FSetPortASciMux	(SCI.c)
  000014EB 00000025 .text   FSetPortBSciMux	(SCI.c)
  00001510 0000003A .text   FSci0_Transmit_Idle_Interrupt	(SCI.c)
  0000154A 0000003A .text   FSci1_Transmit_Idle_Interrupt	(SCI.c)
  00001584 000000B9 .text   FSci0_Receive_Full_Interrupt	(SCI.c)
  0000163D 000000B9 .text   FSci1_Receive_Full_Interrupt	(SCI.c)
  000016F6 00000020 .text   FSci0_Receive_Error_Interrupt	(SCI.c)
  00001716 00000020 .text   FSci1_Receive_Error_Interrupt	(SCI.c)
  00001736 00000015 .text   FSerialInit	(SCI.c)
  0000174B 00000095 .text   FStartSerialCmdList	(SCI.c)
  000017E0 000000DB .text   FProcessNextSerialCmd	(SCI.c)
  000018BB 00000299 .text   FMsg_Interrupt	(Msg.c)
  00001B54 00000036 .text   FDeferredFlashCommand	(Msg.c)
  00001B8A 0000001A .text   FSerialCmdsComplete	(Msg.c)
  00001BA4 00000029 .text   FFlexCanPrepRcvBuf	(FlexCan.c)
  00001BCD 00000044 .text   FFlexCanInit	(FlexCan.c)
  00001C11 00000020 .text   FFlexCanReadMsgData	(FlexCan.c)
  00001C31 00000020 .text   FFlexCanWriteMsgData	(FlexCan.c)
  00001C51 0000005A .text   FFlexCanXmtMsg	(FlexCan.c)
  00001CAB 0000002E .text   FDeferredFlexCanActions	(FlexCan.c)
  00001CD9 0000000B .text   Fabs	(MSL C 56800E.lib arith.o        )
  00001CE4 0000000D .text   Fmemset	(MSL C 56800E.lib mem.o          )
  00001CF1 00000033 .text   Fmemcmp	(MSL C 56800E.lib mem.o          )
  00001D24 000000B5 .text   F__fill_mem	(MSL C 56800E.lib mem_funcs.o    )
  00001DD9 0000000C .text   F__init_sections	(Runtime 56800E.Lib initsections.o )
  00001DE5 00000000 rtlib.text Ffabs	(MSL C 56800E.lib ffabs.o        )
  00001DE5 00000003 rtlib.text rtlib.text	(MSL C 56800E.lib ffabs.o        )
  00001DE8 00000000 rtlib.text ARTDIVS32UZ_2	(Runtime 56800E.Lib artdivs32uz_2.o)
  00001DE8 00000079 rtlib.text rtlib.text	(Runtime 56800E.Lib artdivs32uz_2.o)
  00001E61 00000000 rtlib.text FARTDIVU16UZ	(Runtime 56800E.Lib artdivu16uz.o  )
  00001E61 00000000 rtlib.text ARTDIVU16UZ	(Runtime 56800E.Lib artdivu16uz.o  )
  00001E61 00000021 rtlib.text rtlib.text	(Runtime 56800E.Lib artdivu16uz.o  )
  00001E82 00000042 rtlib.text rtlib.text	(Runtime 56800E.Lib save_reg.o     )
  00001E82 00000000 rtlib.text INTERRUPT_SAVEALL	(Runtime 56800E.Lib save_reg.o     )
  00001EA5 00000000 rtlib.text INTERRUPT_RESTOREALL	(Runtime 56800E.Lib save_reg.o     )
  00001EC4 00000128 fp_engine.text fp_engine.text	(Runtime 56800E.Lib artaddf32u.o   )
  00001EC4 00000000 fp_engine.text ARTSUBF32U	(Runtime 56800E.Lib artaddf32u.o   )
  00001EF5 00000000 fp_engine.text ARTADDF32U	(Runtime 56800E.Lib artaddf32u.o   )
  00001FEC 00000000 fp_engine.text FARTEQF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FEC 000000CB fp_engine.text fp_engine.text	(Runtime 56800E.Lib artcmpf32.o    )
  00001FEC 00000000 fp_engine.text ARTEQF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FEE 00000000 fp_engine.text ARTNEF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FEE 00000000 fp_engine.text FARTNEF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF0 00000000 fp_engine.text ARTGEF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF0 00000000 fp_engine.text FARTGEF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF2 00000000 fp_engine.text FARTLEF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF2 00000000 fp_engine.text ARTLEF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF4 00000000 fp_engine.text ARTGTF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF4 00000000 fp_engine.text FARTGTF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF6 00000000 fp_engine.text ARTLTF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF6 00000000 fp_engine.text FARTLTF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FF8 00000000 fp_engine.text ARTCMPEF32	(Runtime 56800E.Lib artcmpf32.o    )
  00001FFA 00000000 fp_engine.text ARTCMPF32	(Runtime 56800E.Lib artcmpf32.o    )
  000020B7 000000A5 fp_engine.text fp_engine.text	(Runtime 56800E.Lib artdivf32uz.o  )
  000020C8 00000000 fp_engine.text ARTDIVF32UZ	(Runtime 56800E.Lib artdivf32uz.o  )
  0000215C 00000000 fp_engine.text ARTF32_TO_S32U	(Runtime 56800E.Lib artfconv.o     )
  0000215C 00000117 fp_engine.text fp_engine.text	(Runtime 56800E.Lib artfconv.o     )
  0000215E 00000000 fp_engine.text ARTF32_TO_U32U	(Runtime 56800E.Lib artfconv.o     )
  00002160 00000000 fp_engine.text ARTF32_TO_U16U	(Runtime 56800E.Lib artfconv.o     )
  00002162 00000000 fp_engine.text ARTF32_TO_S16U	(Runtime 56800E.Lib artfconv.o     )
  00002273 00000000 fp_engine.text ARTMPYF32U	(Runtime 56800E.Lib artmpyf32u.o   )
  00002273 0000006E fp_engine.text fp_engine.text	(Runtime 56800E.Lib artmpyf32u.o   )
  000022E1 00000040 fp_engine.text fp_engine.text	(Runtime 56800E.Lib artwconv.o     )
  000022E1 00000000 fp_engine.text ARTU16_TO_F32	(Runtime 56800E.Lib artwconv.o     )
  000022E4 00000000 fp_engine.text ARTU32_TO_F32	(Runtime 56800E.Lib artwconv.o     )
  000022F1 00000000 fp_engine.text ARTS16_TO_F32	(Runtime 56800E.Lib artwconv.o     )
  000022F4 00000000 fp_engine.text ARTS32_TO_F32	(Runtime 56800E.Lib artwconv.o     )
  00002321 00000000 fp_engine.text ARTf_coerce	(Runtime 56800E.Lib fcoerce.o      )
  00002321 000000A8 fp_engine.text fp_engine.text	(Runtime 56800E.Lib fcoerce.o      )
  000023C9 00000032 fp_engine.text fp_engine.text	(Runtime 56800E.Lib result_is.o    )
  000023C9 00000000 fp_engine.text ARTf_result_is_zero	(Runtime 56800E.Lib result_is.o    )
  000023D1 00000000 fp_engine.text ARTf_result_is_INF	(Runtime 56800E.Lib result_is.o    )
  000023DA 00000000 fp_engine.text ARTf_y_is_NaN	(Runtime 56800E.Lib result_is.o    )
  000023DE 00000000 fp_engine.text ARTf_result_is_Invalid	(Runtime 56800E.Lib result_is.o    )
  000023EA 00000000 fp_engine.text ARTf_x_and_y_are_NaN	(Runtime 56800E.Lib result_is.o    )
  000023F0 00000000 fp_engine.text ARTf_x_is_NaN	(Runtime 56800E.Lib result_is.o    )
  000023FB 00000000 fp_engine.text ARTf_unpack2z	(Runtime 56800E.Lib utilities.o    )
  000023FB 0000003F fp_engine.text fp_engine.text	(Runtime 56800E.Lib utilities.o    )
  000023FC 00000000 fp_engine.text ARTf_unpack2	(Runtime 56800E.Lib utilities.o    )
  0000240E 00000000 fp_engine.text ARTf_unpackA	(Runtime 56800E.Lib utilities.o    )
#>0000243A          __pROM_data_start (linker command file)

# .data_in_xROM2
  00002FF2 0000000E .const.data Fg_tBootInfo	(Controller.c)

# .data_in_xROM
  00002000 00000066 .const.data FtNoMotor	(Controller.c)
  00002066 00000040 .const.data F@649	(Utility.c)
  000020A6 00000040 .const.data F@652	(Utility.c)
  000020E6 00000004 .const.data FpbRCV_MSG$584	(FlexCan.c)
  000020EA 00000004 .const.data FpbXMT_MSG$585	(FlexCan.c)

# .data_in_p_flash_ROM
#>00000001          __xRAM_data_start (linker command file)
  00000002 00000006 .data   F__ConstToInitArray_0	(Commutate.c)
  00000008 00000006 .data   F__ConstToInitArray_1	(Commutate.c)
  0000000E 00000006 .data   F__ConstToInitArray_2	(Commutate.c)
  00000014 00000006 .data   F__ConstToInitArray_3	(Commutate.c)
  0000001A 00000006 .data   F__ConstToInitArray_4	(Commutate.c)
  00000020 00000006 .data   F__ConstToInitArray_5	(Commutate.c)
  00000026 000005F0 .data   Fg_tVarArray	(Controller.c)
  0000031E 00000001 .data   FwHallBusCounter$525	(HallBus.c)
  0000031F 0000003A .data   F__ConstToInitArray_0	(Utility.c)
  0000035A 00000020 .data   FfFloatCov	(Utility.c)
  0000037A 00000008 .data   FwFlowTable$523	(Utility.c)
  00000382 00000006 .data   FwJogTable$524	(Utility.c)
  00000388 00000003 .data   F__ConstToInitArray_1	(Utility.c)
  0000038C 00000005 .data   F__ConstToInitArray_2	(Utility.c)
  00000392 00000007 .data   F__ConstToInitArray_3	(Utility.c)
  0000039A 00000003 .data   F__ConstToInitArray_4	(Utility.c)
  0000039E 00000003 .data   F__ConstToInitArray_5	(Utility.c)
  000003A2 00000003 .data   F__ConstToInitArray_0	(SCI.c)
  000003A6 00000003 .data   F__ConstToInitArray_1	(SCI.c)
  000003A9 00000001 .data   Fg_wHeartbeat	(Msg.c)
  000003AA 00000004 .data   F__ConstToInitArray_0	(FlexCan.c)
  000003AE 00000004 .data   F__ConstToInitArray_1	(FlexCan.c)
  000003B2 00000004 .data   F__ConstToInitArray_2	(FlexCan.c)
  000003B6 00000004 .data   F__ConstToInitArray_3	(FlexCan.c)
  000003BA 00000000 fp_state.data FPE_state	(Runtime 56800E.Lib fp56800e.o     )
  000003BA 00000001 fp_state.data fp_state.data	(Runtime 56800E.Lib fp56800e.o     )
#>000003BB          __xRAM_data_end (linker command file)
#>000003BA          __data_size (linker command file)

# .data
#>000003BB          _START_BSS (linker command file)
  000003BC 00000020 .bss    FlSum$503	(AnalogIn.c)
  000003DC 00000010 .bss    FwCnt$504	(AnalogIn.c)
  000003EC 00000010 .bss    Fg_tFlashFuncTable	(Controller.c)
  000003FC 00000006 .bss    FwDebounceCtr$480	(DigitalIn.c)
  00000402 00000001 .bss    FeIndex$553	(DigitalIn.c)
  00000403 00000007 .bss    FtHallA	(HallBus.c)
  0000040A 00000007 .bss    FtHallB	(HallBus.c)
  00000411 00000001 .bss    FwHallBusMask$526	(HallBus.c)
  00000412 00000001 .bss    FyMsToggle$527	(HallBus.c)
  00000413 00000001 .bss    FwSerialTimeoutInMs$573	(HallBus.c)
  00000414 00000001 .bss    FwWordCount$506	(Motion.c)
  00000415 00000001 .bss    FwNumWords$507	(Motion.c)
  00000416 00000001 .bss    FpwBLDCbuffer$508	(Motion.c)
  00000418 00000002 .bss    FfTacCntATmp	(Motion.c)
  0000041A 00000002 .bss    FfTacCntA	(Motion.c)
  0000041C 00000001 .bss    FwIntervalA	(Motion.c)
  0000041E 00000002 .bss    FfTacCntBTmp	(Motion.c)
  00000420 00000002 .bss    FfTacCntB	(Motion.c)
  00000422 00000001 .bss    FwIntervalB	(Motion.c)
  00000424 00000002 .bss    FfCurrentLoopRateA$477	(Utility.c)
  00000426 00000002 .bss    FfCurrentLoopRateB$478	(Utility.c)
  00000428 00000001 .bss    Fsg_wCmdIndex	(SCI.c)
  00000429 00000001 .bss    Fsg_pwCmdRequest	(SCI.c)
  0000042A 00000001 .bss    Fsg_wSerial0Status	(SCI.c)
  0000042B 00000001 .bss    Fsg_wSerial1Status	(SCI.c)
  0000042C 00000001 .bss    Fsg_wResultByteCnt0	(SCI.c)
  0000042D 00000001 .bss    Fsg_wResult0	(SCI.c)
  0000042E 00000001 .bss    Fsg_wResultByteCnt1	(SCI.c)
  0000042F 00000001 .bss    Fsg_wResult1	(SCI.c)
  00000430 00000001 .bss    Fsg_pbFlashPageCmd	(SCI.c)
  00000431 00000001 .bss    Fsg_wFlashPageCmdByteCnt	(SCI.c)
  00000432 00000001 .bss    Fsg_wWaitForCmdInMs	(SCI.c)
  00000433 00000001 .bss    Fg_wLoadSerialTimeout	(SCI.c)
  00000434 00000001 .bss    Fg_yNewXfrMotorTblA	(SCI.c)
  00000435 00000001 .bss    Fg_yNewXfrMotorTblB	(SCI.c)
  00000436 00000001 .bss    Fsg_pbRcvMotorTbl0	(SCI.c)
  00000437 00000001 .bss    Fsg_pbRcvMotorTbl1	(SCI.c)
  00000438 00000001 .bss    Fsg_wRcvMotorTbl0Offs	(SCI.c)
  00000439 00000001 .bss    Fsg_wRcvMotorTbl1Offs	(SCI.c)
  0000043A 00000001 .bss    Fsg_bRcvMotorTbl0Crc	(SCI.c)
  0000043B 00000001 .bss    Fsg_bRcvMotorTbl1Crc	(SCI.c)
  0000043B 00000001 .bss    Fsg_pbRcvSerialNumber0	(SCI.c)
  0000043C 00000001 .bss    Fsg_pbRcvSerialNumber1	(SCI.c)
  0000043D 00000001 .bss    Fsg_wRcvSerialNumber0Offs	(SCI.c)
  0000043E 00000001 .bss    Fsg_wRcvSerialNumber1Offs	(SCI.c)
  0000043F 00000001 .bss    Fsg_bRcvSerialNumber0Crc	(SCI.c)
  00000440 00000001 .bss    Fsg_bRcvSerialNumber1Crc	(SCI.c)
  00000440 00000006 .bss    Fsg_pbXfrSerialNumberB	(SCI.c)
  00000446 00000006 .bss    Fsg_pbXfrSerialNumberA	(SCI.c)
  0000044C 00000022 .bss    Fg_tXfrMotorTblB	(SCI.c)
  0000045D 00000022 .bss    Fg_tXfrMotorTblA	(SCI.c)
  0000046E 00000001 .bss    Fsg_wRxDataIn	(Msg.c)
  0000046F 00000001 .bss    Fsg_pwDataArray	(Msg.c)
  00000470 00000001 .bss    Fsg_eMsgWait	(Msg.c)
  00000471 00000202 .bss    Fsg_pwRxBuffer	(Msg.c)
  00000673 00000001 .bss    Fsg_wMasterRcvToggle	(Msg.c)
  00000674 00000001 .bss    Fsg_wMasterXmtToggle	(Msg.c)
  00000675 00000100 .bss    Fg_pbCrcTable	(Msg.c)
#>000006F5          _END_BSS (linker command file)
#>000006F8          _HEAP_ADDR (linker command file)
#>00000100          _HEAP_SIZE (linker command file)
#>000007F8          _HEAP_END (linker command file)
#>00000200          _min_stack_size (linker command file)
#>000007F8          _stack_addr (linker command file)
#>000009F8          _stack_end (linker command file)
#>000006F8          F_heap_addr (linker command file)
#>000007F8          F_heap_end (linker command file)
#>000007F8          F_Lstack_addr (linker command file)
#>000003BA          F_Ldata_size (linker command file)
#>00000001          F_Ldata_RAM_addr (linker command file)
#>0000243A          F_Ldata_ROM_addr (linker command file)
#>00000000          F_xROM_to_xRAM (linker command file)
#>00000001          F_pROM_to_xRAM (linker command file)
#>000003BB          F_start_bss (linker command file)
#>000006F5          F_end_bss (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  00000000 00000000 000000A4 .p_interrupts_ROM
  000000A4 000000A4 00002396 .p_flash_ROM
  0000243A 00000001 000003BA .p_flash_ROM_data
  00020000 00020000 00002000 .p_boot_flash_ROM
  00022000 00022000 0000F800 .p_reserved
  0002F800 0002F800 0000D800 .p_internal_RAM
  00030000 00030000 00000000 .p_external_RAM
  00000001 00000001 000009F7 .x_internal_RAM
  00002000 00002000 000000EE .x_flash_ROM
  00002FF2 00002FF2 0000000E .x_flash_ROM2
  0000F000 0000F000 00001000 .x_onchip_peripherals
  00010000 00010000 00FEFF00 .x_external_RAM_2
  00FFFF00 00FFFF00 00000000 .x_EOnCE

# Link start time: Tue Nov 03 10:04:44 2020
# Link end time: Tue Nov 03 10:04:44 2020
